.Dd April  7, 2023
.Dt libhmac 3
.Os libhmac
.Sh NAME
.Nm libhmac.h
.Nd Library to support various Hash-based Message Authentication Codes (HMAC)
.Sh SYNOPSIS
.In libhmac.h
.Pp
Support functions
.Ft const char *
.Fn libhmac_get_version "void"
.Pp
Error functions
.Ft void
.Fn libhmac_error_free "libhmac_error_t **error"
.Ft int
.Fn libhmac_error_fprint "libhmac_error_t *error" "FILE *stream"
.Ft int
.Fn libhmac_error_sprint "libhmac_error_t *error" "char *string" "size_t size"
.Ft int
.Fn libhmac_error_backtrace_fprint "libhmac_error_t *error" "FILE *stream"
.Ft int
.Fn libhmac_error_backtrace_sprint "libhmac_error_t *error" "char *string" "size_t size"
.Pp
MD5 context functions
.Ft int
.Fn libhmac_md5_context_initialize "libhmac_md5_context_t **context" "libhmac_error_t **error"
.Ft int
.Fn libhmac_md5_context_free "libhmac_md5_context_t **context" "libhmac_error_t **error"
.Ft int
.Fn libhmac_md5_context_update "libhmac_md5_context_t *context" "const uint8_t *buffer" "size_t size" "libhmac_error_t **error"
.Ft int
.Fn libhmac_md5_context_finalize "libhmac_md5_context_t *context" "uint8_t *hash" "size_t hash_size" "libhmac_error_t **error"
.Pp
MD5 functions
.Ft int
.Fn libhmac_md5_calculate "const uint8_t *buffer" "size_t size" "uint8_t *hash" "size_t hash_size" "libhmac_error_t **error"
.Ft int
.Fn libhmac_md5_calculate_hmac "const uint8_t *key" "size_t key_size" "const uint8_t *buffer" "size_t size" "uint8_t *hmac" "size_t hmac_size" "libhmac_error_t **error"
.Pp
SHA1 context functions
.Ft int
.Fn libhmac_sha1_context_initialize "libhmac_sha1_context_t **context" "libhmac_error_t **error"
.Ft int
.Fn libhmac_sha1_context_free "libhmac_sha1_context_t **context" "libhmac_error_t **error"
.Ft int
.Fn libhmac_sha1_context_update "libhmac_sha1_context_t *context" "const uint8_t *buffer" "size_t size" "libhmac_error_t **error"
.Ft int
.Fn libhmac_sha1_context_finalize "libhmac_sha1_context_t *context" "uint8_t *hash" "size_t hash_size" "libhmac_error_t **error"
.Pp
SHA1 functions
.Ft int
.Fn libhmac_sha1_calculate "const uint8_t *buffer" "size_t size" "uint8_t *hash" "size_t hash_size" "libhmac_error_t **error"
.Ft int
.Fn libhmac_sha1_calculate_hmac "const uint8_t *key" "size_t key_size" "const uint8_t *buffer" "size_t size" "uint8_t *hmac" "size_t hmac_size" "libhmac_error_t **error"
.Pp
SHA-224 context functions
.Ft int
.Fn libhmac_sha224_context_initialize "libhmac_sha224_context_t **context" "libhmac_error_t **error"
.Ft int
.Fn libhmac_sha224_context_free "libhmac_sha224_context_t **context" "libhmac_error_t **error"
.Ft int
.Fn libhmac_sha224_context_update "libhmac_sha224_context_t *context" "const uint8_t *buffer" "size_t size" "libhmac_error_t **error"
.Ft int
.Fn libhmac_sha224_context_finalize "libhmac_sha224_context_t *context" "uint8_t *hash" "size_t hash_size" "libhmac_error_t **error"
.Pp
SHA-224 functions
.Ft int
.Fn libhmac_sha224_calculate "const uint8_t *buffer" "size_t size" "uint8_t *hash" "size_t hash_size" "libhmac_error_t **error"
.Ft int
.Fn libhmac_sha224_calculate_hmac "const uint8_t *key" "size_t key_size" "const uint8_t *buffer" "size_t size" "uint8_t *hmac" "size_t hmac_size" "libhmac_error_t **error"
.Pp
SHA-256 context functions
.Ft int
.Fn libhmac_sha256_context_initialize "libhmac_sha256_context_t **context" "libhmac_error_t **error"
.Ft int
.Fn libhmac_sha256_context_free "libhmac_sha256_context_t **context" "libhmac_error_t **error"
.Ft int
.Fn libhmac_sha256_context_update "libhmac_sha256_context_t *context" "const uint8_t *buffer" "size_t size" "libhmac_error_t **error"
.Ft int
.Fn libhmac_sha256_context_finalize "libhmac_sha256_context_t *context" "uint8_t *hash" "size_t hash_size" "libhmac_error_t **error"
.Pp
SHA-256 functions
.Ft int
.Fn libhmac_sha256_calculate "const uint8_t *buffer" "size_t size" "uint8_t *hash" "size_t hash_size" "libhmac_error_t **error"
.Ft int
.Fn libhmac_sha256_calculate_hmac "const uint8_t *key" "size_t key_size" "const uint8_t *buffer" "size_t size" "uint8_t *hmac" "size_t hmac_size" "libhmac_error_t **error"
.Pp
SHA-512 context functions
.Ft int
.Fn libhmac_sha512_context_initialize "libhmac_sha512_context_t **context" "libhmac_error_t **error"
.Ft int
.Fn libhmac_sha512_context_free "libhmac_sha512_context_t **context" "libhmac_error_t **error"
.Ft int
.Fn libhmac_sha512_context_update "libhmac_sha512_context_t *context" "const uint8_t *buffer" "size_t size" "libhmac_error_t **error"
.Ft int
.Fn libhmac_sha512_context_finalize "libhmac_sha512_context_t *context" "uint8_t *hash" "size_t hash_size" "libhmac_error_t **error"
.Pp
SHA-512 functions
.Ft int
.Fn libhmac_sha512_calculate "const uint8_t *buffer" "size_t size" "uint8_t *hash" "size_t hash_size" "libhmac_error_t **error"
.Ft int
.Fn libhmac_sha512_calculate_hmac "const uint8_t *key" "size_t key_size" "const uint8_t *buffer" "size_t size" "uint8_t *hmac" "size_t hmac_size" "libhmac_error_t **error"
.Sh DESCRIPTION
The
.Fn libhmac_get_version
function is used to retrieve the library version.
.Sh RETURN VALUES
Most of the functions return NULL or \-1 on error, dependent on the return type.
For the actual return values see "libhmac.h".
.Sh ENVIRONMENT
None
.Sh FILES
None
.Sh BUGS
Please report bugs of any kind on the project issue tracker: https://github.com/libyal/libhmac/issues
.Sh AUTHOR
These man pages are generated from "libhmac.h".
.Sh COPYRIGHT
Copyright (C) 2011-2023, Joachim Metz <joachim.metz@gmail.com>.
.sp
This is free software; see the source for copying conditions.
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.Sh SEE ALSO
the libhmac.h include file
